---

dependency:
  name: galaxy
driver:
  name: docker
lint: |
  set -e
  yamllint .
  ansible-lint
platforms:
{% for platform in MOLECULE_DISTROS %}
  - name: nginx-node1-{{ platform }}
    image: "geerlingguy/docker-{{ platform }}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - nginx
  - name: nginx-node2-{{ platform }}
    image: "geerlingguy/docker-{{ platform }}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - nginx
  - name: haproxy-master-{{ platform }}
    image: "geerlingguy/docker-{{ platform }}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
#    docker_networks:
#      - name: "frontend"
#        ipam_config:
#          - subnet: "10.30.50.0/24"
#      - name: "backend"
#        ipam_config:
#          - subnet: "192.168.50.0/24"
#    networks:
#      - name: "frontend"
#        ipv4_address: "10.30.50.11"
#      - name: "backend"
#        ipv4_address: "192.168.50.11"
    privileged: true
    pre_build_image: true
    groups:
      - haproxy
      - keepalived_master
  - name: haproxy-backup-{{ platform }}
    image: "geerlingguy/docker-{{ platform }}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
#    docker_networks:
#      - name: "frontend"
#        ipam_config:
#          - subnet: "10.30.50.0/24"
#      - name: "backend"
#        ipam_config:
#          - subnet: "192.168.50.0/24"
#    networks:
#      - name: "frontend"
#        ipv4_address: "10.30.50.12"
#      - name: "backend"
#        ipv4_address: "192.168.50.12"
    privileged: true
    pre_build_image: true
    groups:
      - haproxy
      - keepalived_backup
{% endfor %}
provisioner:
  name: ansible
  env:
    ANSIBLE_PIPELINING: "True"
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    host_vars:
      haproxy-rockylinux8:
        ansible_python_interpreter: /usr/libexec/platform-python
scenario:
  name: default
verifier:
  name: ansible
